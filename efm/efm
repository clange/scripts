#!/bin/bash
#
# efm: using the text editor to change names and other properties of files
#
# © Christoph Lange <math.semantic.web@gmail.com> 2000–2021

function help {
cat <<-'EOF'
Usage: `basename $0` [-h] [FILE ...]
Runs the default text editor to change names, permissions (mode) and
ownership of FILE(s) (default: all files in the current directory).

  -v, --verbose	Output a diagnostic for every file processed
  -h, --help	Display this help

Configuration of the editor via the EDITOR variable; fallback: vi
EOF
}

verbose=""
if [[ $# -eq 0 ]]
then
  set *
elif [[ "$1" = -h || "$1" = --help ]]
then
  help
  exit 0
elif [[ "$1" = -v || "$1" = --verbose ]]
then
  verbose="$1"
fi

# Simple approach assuming filenames without spaces:
#
# ls -ld "$@" \
#  | awk '{ printf("%s\t%s\t%s\t%s\n", $1, $3, $4, $9); }' \
#  | tee /tmp/efm.$$~ \
#  > /tmp/efm.$$

i=1
ls -ld "$@" \
 | while read f1 f2 f3 f4 f5
   do
     echo -ne "$f1\t$f3\t$f4\t"
     ## For debugging:
     # eval echo \${$i}
     echo ${!i}
     let i+=1
   done \
 | tee /tmp/efm.$$~ \
 > /tmp/efm.$$

${EDITOR:-vi} /tmp/efm.$$~

status=0

if ! cmp /tmp/efm.$$ /tmp/efm.$$~ > /dev/null
then
#  Alternative using awk
#
#  if wc -l /tmp/efm.$$ /tmp/efm.$$~ \
#   | awk '{ if (NR == 1) l1 = $1; else exit ($1 == l1) }'
  set $(wc -l /tmp/efm.$$ /tmp/efm.$$~)
  if [[ $1 -ne $3 ]]
  then
    echo "efm: number of files changed" >&2
    exit 1
  fi

  exec 3< /tmp/efm.$$
  exec 4< /tmp/efm.$$~

  while read mod1 usr1 grp1 name1 <&3 \
     && read mod2 usr2 grp2 name2 <&4
  do
    if [[ "$mod1 $usr1 $grp1 $name1" != "$mod2 $usr2 $grp2 $name2" ]]
    then
      # change mode
      if [[ "$mod2" != "$mod1" ]]
      then
	mode=$(echo $mod2 \
	 | sed 's/.\(...\)\(...\)\(...\)/u=\1,g=\2,o=\3/;
		s/-//g;
		s/\([st]\)/x\1/g;
		y/ST/st/;')
	chmod $verbose $mode "$name1" || let "status|=2"
      fi

      # change owner
      if [[ "$usr2" != $usr1 ]]
      then
	own=$usr2
      else
	own=
      fi

      if [[ "$grp2" != $grp1 ]]
      then
	own=$own.$grp2
      fi

      if [[ "$own" ]]
      then
        chown $verbose $own "$name1" || let "status|=4"
      fi

      if [[ "$name2" != "$name1" ]]
      then
	mv $verbose "$name1" "$name2" || let "status|=8"
      fi
    fi
  done
fi

rm /tmp/efm.$$ /tmp/efm.$$~

exit $status
